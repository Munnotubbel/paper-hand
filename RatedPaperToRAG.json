{
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 15
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1872,
        240
      ],
      "id": "e81ec75c-620c-44d7-b790-a9a18e707f24",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://paper-backend:4242/rated-papers/query",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"min_rating\": 6.1,\n  \"added_rag\": false,\n  \"category_keywords\": [\n    \"Solide Grundlage\", \n    \"Content-Gold\", \n    \"Interessanter Ansatz\"\n  ],\n  \"limit\": 1\n}",
        "options": {
          "timeout": 30000
        }
      },
      "id": "6040a6cd-5079-4a3c-abd7-04c84e1bbc3c",
      "name": "1. Get Rated Paper1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1632,
        240
      ],
      "credentials": {
        "httpBearerAuth": {
          "id": "ijgx3lz1xx4Q9zxn",
          "name": "Bearer Auth account"
        },
        "httpHeaderAuth": {
          "id": "RTzRC0AggRABuRdo",
          "name": "Auth Header Paper Backend API KEY"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $input.all().length }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "gt"
                    },
                    "id": "9ca3c566-4222-4f04-8f7a-53905212265f"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Paper gefunden"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $input.all().length }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "5f928ef1-de1c-4891-9681-2190b23cdfab"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Keine Papers gefunden"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1424,
        240
      ],
      "id": "2c9a2a6c-c9e8-437a-a351-8b48c997e0d0",
      "name": "Switch1"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1152,
        432
      ],
      "id": "f900e514-ec48-4af3-b238-4b2b082b8e9c",
      "name": "Wait (no result)1",
      "webhookId": "cdb2d1cd-68be-4d2e-a53e-9c5df0c04853"
    },
    {
      "parameters": {
        "bucketName": "paper-store",
        "fileKey": "={{ $json.pmid }}.pdf"
      },
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [
        -1232,
        240
      ],
      "id": "d2a68389-8729-475f-be71-8bdfcde7d52d",
      "name": "Download a file1",
      "credentials": {
        "s3": {
          "id": "lXbGUFRjp6Yya8kj",
          "name": "Strato S3 Images"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1104,
        240
      ],
      "id": "98a91f75-5fc0-4cb3-bbbc-42315a7313ac",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://paper-backend:4242/text/normalize-for-n8n",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-API-KEY",
              "value": "={{ $json.API_SECRET_KEY || 'your-api-key' }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "JSON",
        "body": "={{ JSON.stringify({\npdf_extract: $json,\nnormalize_unicode: true,\nfix_hyphenation: true,\ncollapse_whitespace: true\n}) }}",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -976,
        240
      ],
      "id": "6b681f5e-3e51-4f63-891a-04467c93babe",
      "name": "Normalize Text1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "RTzRC0AggRABuRdo",
          "name": "Auth Header Paper Backend API KEY"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://paper-backend:4242/citations/extract-for-n8n",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-API-KEY",
              "value": "={{ $json.API_SECRET_KEY || 'your-api-key' }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\ntext: $json.full_text,\n}) }}",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -832,
        240
      ],
      "id": "44b37ba3-5ebe-41cd-8ebd-d7c69308f0ec",
      "name": "Literatur-Extraktor1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "RTzRC0AggRABuRdo",
          "name": "Auth Header Paper Backend API KEY"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://paper-backend:4242/citations/remove-references-for-n8n",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-API-KEY",
              "value": "={{ $json.API_SECRET_KEY || 'your-api-key' }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\ntext: $('Normalize Text1').item.json.full_text,\n}) }}",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -672,
        240
      ],
      "id": "75c46dfd-753a-4b66-87cb-0c814a356416",
      "name": "Quellenverzeichnis entfernen1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "RTzRC0AggRABuRdo",
          "name": "Auth Header Paper Backend API KEY"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const paper = $('1. Get Rated Paper1').item.json;\nconst refsParsed = $('Literatur-Extraktor1').item.json;\n\nconst pmidRaw = paper.pmid || paper.pmid_pdf_id || $json.pmid || $json.pmid_pdf_id;\nconst doiRaw = paper.doi;\n\nfunction normalizeDoi(v){ if(!v) return ''; let s=String(v).toLowerCase().trim(); s = s.replace(/^doi:\\s*/,''); s = s.replace(/\\s/g,''); s = s.replace(/[\\.,;]+$/,''); return s; }\nfunction normalizePmid(v){ if(!v) return ''; const m = String(v).match(/\\d+/g); return m ? m.join('').replace(/^0+/,'') : ''; }\n\nconst doi_norm = normalizeDoi(doiRaw);\nconst pmid_norm = normalizePmid(pmidRaw);\nconst identity_key = doi_norm ? `doi:${doi_norm}` : (pmid_norm ? `pmid:${pmid_norm}` : (pmidRaw ? `pmid_pdf_id:${pmidRaw}` : ''));\n\nconst rating = Number(paper.rating);\nconst confidence = Number(paper.confidence_score);\nconst category = paper.category;\nconst ai_summary = paper.ai_summary || '';\nlet keyFindings = paper.key_findings;\nif (!Array.isArray(keyFindings)) {\n  keyFindings = String(keyFindings || '').split('\\n').map(s => s.trim()).filter(Boolean);\n}\n\nconst referencesArray = Array.isArray(refsParsed) ? refsParsed : (refsParsed?.references ?? []);\nconst refsText = Array.isArray(referencesArray) ? referencesArray.join('\\n') : JSON.stringify(referencesArray||'');\nconst doiRegex = /\\b10\\.\\d{4,9}\\/[-._;()/:A-Z0-9]+/gi;\nconst seenDOI = new Set();\nconst out_doi_norms = [];\nlet m;\nwhile ((m = doiRegex.exec(refsText))){ const n = normalizeDoi(m[0]); if(n && !seenDOI.has(n)){ seenDOI.add(n); out_doi_norms.push(n);} }\nconst out_links_count = out_doi_norms.length;\n\nconst metadataBase = {\n  title: paper.title || paper.paper_title || null,\n  journal: paper.journal || null,\n  year: paper.year ? Number(paper.year) : null,\n  doi: doiRaw || null,\n  doi_norm,\n  pmid_pdf_id: String(pmidRaw || ''),\n  pmid_norm,\n  identity_key,\n  category,\n  source: 'rated_papers',\n  rating,\n  confidence_score: confidence,\n  ai_summary,\n  key_findings: keyFindings,\n  study_strength: paper.study_strength || '',\n  study_limitations: paper.study_limitations || '',\n  content_url: paper.content_url ?? null,\n  content_status: paper.content_status ?? null,\n  legal_tier: 'studies_only_no_claims',\n  ingestion_timestamp: new Date().toISOString(),\n  document_group: 'papers',\n  graph_ready: true,\n  out_doi_norms,\n  out_links_count\n};\n\nconst metadataMain = { ...metadataBase, section: 'main', references_parsed: referencesArray };\nconst metadataRefs = { ...metadataBase, section: 'references' };\n\nitem.metadata_main = JSON.stringify(metadataMain);\nitem.metadata_refs = JSON.stringify(metadataRefs);\nitem.main_filename = `${pmidRaw || 'paper'}.main.txt`;\nitem.refs_content = JSON.stringify(referencesArray);\nitem.refs_filename = `${pmidRaw || 'paper'}.references.json`;\nreturn item;"
      },
      "type": "n8n-nodes-base.functionItem",
      "typeVersion": 1,
      "position": [
        -368,
        144
      ],
      "id": "b35d95c7-968e-4f88-93d2-a409f5804196",
      "name": "Build Metadata1"
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "options": {
          "fileName": "={{ $json.main_filename }}",
          "mimeType": "text/plain"
        }
      },
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        -112,
        -96
      ],
      "id": "9425308a-9bf9-47a1-a567-4dd588ee5edf",
      "name": "MainText: JSON→Binary1"
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "options": {
          "fileName": "={{ $json.refs_filename }}",
          "mimeType": "application/json"
        }
      },
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        144,
        128
      ],
      "id": "2bca2508-3358-4ea7-848f-fc7eeff4532e",
      "name": "Refs: JSON→Binary1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://lightrag:9621/documents/upload",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key",
              "value": "={{ $json.LIGHTRAG_API_KEY || '' }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "file"
            },
            {
              "name": "metadata",
              "value": "={{ $json.metadata_main }}"
            }
          ]
        },
        "options": {
          "timeout": 60000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        160,
        -32
      ],
      "id": "95f79365-4a56-4d2f-bb91-6a44d849bca5",
      "name": "Upload MainText1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "C6EaRz4vxUMkBGCJ",
          "name": "LightRAG Api key"
        }
      }
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1120,
        128
      ],
      "id": "60b18ebf-7aa1-4b88-916d-b6b0cbd23c34",
      "name": "Wait (after upload)1",
      "webhookId": "2fd69ce6-3048-4fa3-bd6b-9a30f410d1c4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://lightrag:9621/documents/upload",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key",
              "value": "={{ $json.LIGHTRAG_API_KEY || '' }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "file"
            },
            {
              "name": "metadata",
              "value": "={{ $json.metadata_refs }}"
            }
          ]
        },
        "options": {
          "timeout": 60000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        912,
        48
      ],
      "id": "e1654c57-50f6-4369-a6c1-be33042e9430",
      "name": "Upload References1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "C6EaRz4vxUMkBGCJ",
          "name": "LightRAG Api key"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://paper-backend:4242/text/normalize-for-n8n",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-API-KEY",
              "value": "={{ $json.API_SECRET_KEY || 'your-api-key' }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "JSON",
        "body": "={{ JSON.stringify({\n  pdf_extract: {\n    text: $('Quellenverzeichnis entfernen1').item.json.main_text || $('Quellenverzeichnis entfernen1').item.json.text || $('Normalize Text1').item.json.full_text\n  },\n  normalize_unicode: true,\n  fix_hyphenation: true,\n  collapse_whitespace: true,\n  header_footer_detection: false,\n  min_artifact_line_len: 0,\n  strip_publisher_boilerplate: true,\n  strip_correspondence_emails: true,\n  strip_figures_and_tables: true,\n  strip_front_matter: true,\n  publisher_hint: 'frontiers'\n}) }}",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -528,
        240
      ],
      "id": "6791bb9f-8d34-4e6a-a7f6-41431060f9bb",
      "name": "Finalize Main Text1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "RTzRC0AggRABuRdo",
          "name": "Auth Header Paper Backend API KEY"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://paper-backend:4242/graph/paper-links/upsert",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-API-KEY",
              "value": "={{ $json.API_SECRET_KEY || 'your-api-key' }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\n  source: {\n    doi: $('1. Get Rated Paper1').item.json.doi,\n    pmid: $('1. Get Rated Paper1').item.json.pmid,\n    table: 'rated_papers'\n  },\n  citations: Array.isArray($('Literatur-Extraktor1').item.json) ? $('Literatur-Extraktor1').item.json : ($('Literatur-Extraktor1').item.json.references || []),\n  link_type: 'cites'\n}) }}",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1360,
        144
      ],
      "id": "cf9991d8-c8f7-4e46-b52f-62acfdf0fae9",
      "name": "Upsert Paper Links1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "RTzRC0AggRABuRdo",
          "name": "Auth Header Paper Backend API KEY"
        }
      }
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "http://paper-backend:4242/rated-papers/added-rag",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  doi: $('1. Get Rated Paper1').item.json.doi,\n  added_rag: true,\n  processed: true,\n  lightrag_doc_id: ($('Upload MainText1').item.json.doc_id || $('Upload MainText1').item.json.id || ''),\n  references_json: $('Literatur-Extraktor1').item.json\n}) }}",
        "options": {}
      },
      "id": "27071a5b-3e74-4a0e-ae17-5d77a179e637",
      "name": "Mark as Added1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1360,
        368
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "RTzRC0AggRABuRdo",
          "name": "Auth Header Paper Backend API KEY"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        496,
        48
      ],
      "id": "85335b8f-9b4d-4859-b565-01377c5b4ed6",
      "name": "Merge"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "seconds"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        304,
        0
      ],
      "id": "3d977271-eff4-43c7-a059-9c014855fa4c",
      "name": "Wait",
      "webhookId": "f83ab555-931c-4156-a4fc-2bdfb4601180"
    },
    {
      "parameters": {
        "jsCode": "const out = [];\nfor (const item of items) {\n  if (item.binary && item.binary.data) {\n    item.binary.file = item.binary.data;\n    delete item.binary.data;\n    out.push(item);\n  }\n}\nreturn out;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        704,
        48
      ],
      "id": "b7e991c6-9de2-44bb-b25c-4269f3a42700",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "const out = [];\nfor (const item of items) {\n  const fullText = $('Finalize Main Text1').item.json.full_text || $('Quellenverzeichnis entfernen1').item.json.main_text || '';\n  const fileName = (item.json && item.json.main_filename) ? item.json.main_filename : 'main.txt';\n  item.binary = item.binary || {};\n  item.binary.file = {\n    data: Buffer.from(String(fullText), 'utf8').toString('base64'),\n    fileName,\n    mimeType: 'text/plain'\n  };\n  out.push(item);\n}\nreturn out;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        32,
        -80
      ],
      "id": "b5a096ff-d498-4333-b80d-2757805c5459",
      "name": "Main: data→file"
    },
    {
      "parameters": {
        "jsCode": "// Ensure unique filenames by appending a timestamp\nfor (const item of items) {\n  if (!item.json) continue;\n  const ts = Date.now();\n  if (typeof item.json.main_filename === 'string') {\n    item.json.main_filename = item.json.main_filename.replace(/\\.main\\.txt$/, `.${ts}.main.txt`);\n  }\n  if (typeof item.json.refs_filename === 'string') {\n    item.json.refs_filename = item.json.refs_filename.replace(/\\.references\\.json$/, `.${ts}.references.json`);\n  }\n}\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        128
      ],
      "id": "dbadbb1f-00fa-42a2-9512-f42294da602d",
      "name": "Timestamp Filenames"
    }
  ],
  "connections": {
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "1. Get Rated Paper1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1. Get Rated Paper1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Download a file1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait (no result)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download a file1": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Normalize Text1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalize Text1": {
      "main": [
        [
          {
            "node": "Literatur-Extraktor1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Literatur-Extraktor1": {
      "main": [
        [
          {
            "node": "Quellenverzeichnis entfernen1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quellenverzeichnis entfernen1": {
      "main": [
        [
          {
            "node": "Finalize Main Text1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Metadata1": {
      "main": [
        [
          {
            "node": "Timestamp Filenames",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MainText: JSON→Binary1": {
      "main": [
        [
          {
            "node": "Main: data→file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Refs: JSON→Binary1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload MainText1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait (after upload)1": {
      "main": [
        [
          {
            "node": "Upsert Paper Links1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload References1": {
      "main": [
        [
          {
            "node": "Wait (after upload)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Finalize Main Text1": {
      "main": [
        [
          {
            "node": "Build Metadata1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert Paper Links1": {
      "main": [
        [
          {
            "node": "Mark as Added1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark as Added1": {
      "main": [
        [
          {
            "node": "1. Get Rated Paper1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Upload References1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Main: data→file": {
      "main": [
        [
          {
            "node": "Upload MainText1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Timestamp Filenames": {
      "main": [
        [
          {
            "node": "MainText: JSON→Binary1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Refs: JSON→Binary1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "e29847cb0d85386a381a01c77c5a370e3c3dcd4f4ebcacf20107c8e6e234123a"
  }
}